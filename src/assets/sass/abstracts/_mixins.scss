@mixin scaleOnHover {
  &::after {
    transform: scaleX(1.5) scaleY(1.6);
    opacity: 0;
  }
}

@mixin clearfix {
  &::after {
    // use content prop for pseudo element to work;
    content: "";
    display: table;
    clear: both;
  }
}

@mixin centerVertical {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/*

  0    - 600px  Phone
  600  - 900px  Tablet
  900  - 1200px Landscape
  1200 - 1800px Desktop (normal desktop first approach)
  1800 +        Big Desktop


$breakpoint argument choices:
 phone
 tablet-portrait
 tablet-landscape
 desktop

 em = best choice for media queries
 1em = 16px
*/

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    // 600px / 16px (default font size) = 37.5em
    @media (max-width: 37.5em ) { @content };
  }

  @if $breakpoint == tablet-portrait {
    @media (max-width: 56.25em) { @content };
  }

  @if $breakpoint == tablet-landscape {
    @media (max-width: 75em) { @content };
  }

  @if $breakpoint == desktop {
    @media (min-width: 112.5em) { @content };
  }
}
